"""calculemos las distancias entre todos los pares de puntos y determinaremos cuales estan más alejados entre sí y
cuales estan mas cercanos utilizando las distancias Euclidiana, Manhattan y Chebyshev"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import os
from scipy.spatial import distance

puntos={
    'Punto A':(2,3),
    'Punto B':(5,4),
    'Punto C':(1,1),
    'Punto D':(6,7),
    'Punto E':(3,5),
    'Punto F':(8,2),
    'Punto G':(4,6),
    'Punto H':(2,1)
}

#convertir las coordenadas en dataframe

#Convertir las coordenadas a un dataframe
df_puntos= pd.DataFrame(puntos).T
df_puntos.columns =['X', 'Y']
print('Coordenasdas de los puntos: ')
print(df_puntos)

def calcular_distancias(puntos):
    distancias=pd.DataFrame(index= df_puntos.index, columns=df_puntos.index)
    #calulo de distancias
    for i in df_puntos.index:
        for j in df_puntos.index:
            if i!=j: #No calcula la distancia del mismo punto
                #distancia euclidiana
                distancias.loc[i, j]=distance.euclidean(df_puntos.loc[i], df_puntos.loc[j])
    return distancias 

distancias = calcular_distancias(puntos)
valor_maximo= distancias.values.max()
(punto1, punto2) = distancias.stack().idxmax()
print("Tabla de distancias")
print(distancias)
print("distancia maxima: ", valor_maximo)
print("Entre el punto ", punto1, " y el punto ", punto2)

#otra manera
max_value = distancias.max().max()
#obtener la columna con el valor maximo
col_max = distancias.max().idxmax()

#obtener el indice (fila) que contiene el valor maximo
id_max = distancias[col_max].idxmax()

print(f'valor maximo: {max_value}')
print(f'columna: {col_max}')
print(f'Índice: {id_max}')